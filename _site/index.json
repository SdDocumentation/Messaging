{
  "api/index.html": {
    "href": "api/index.html",
    "title": "",
    "keywords": ""
  },
  "api/SDWORX.Messaging.Api.Controllers.Admin.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Admin.html",
    "title": "Namespace SDWORX.Messaging.Api.Controllers.Admin",
    "keywords": "Namespace SDWORX.Messaging.Api.Controllers.Admin Classes MessageController Message controller, messages don't create PublicationController Messaging command, is the command to send a message. This can be for a certain technology, mail, push Or based on the preferences of the receiver"
  },
  "api/SDWORX.Messaging.Api.Controllers.Admin.MessageController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Admin.MessageController.html",
    "title": "Class MessageController",
    "keywords": "Class MessageController Message controller, messages don't create Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ApiControllerBase MessageController Namespace : SDWORX.Messaging.Api.Controllers.Admin Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"admin/messages\")] [ApiController] [Authorize(\"Application\")] public class MessageController : ApiControllerBase Constructors View Source MessageController(ILogService<MessageController>, IMessageService) Constructor for message controller Declaration public MessageController(ILogService<MessageController> log, IMessageService messageService) Parameters Type Name Description SDWORX.Messaging.Logging.ILogService < MessageController > log SDWORX.Messaging.Business.Messages.Services.IMessageService messageService Methods View Source CreateMessage(CreateMessage) Create a message as a template Declaration [HttpPost] [ProducesResponseType(typeof(ApiResult<Message>), 201)] [ProducesResponseType(400)] public async Task<IActionResult> CreateMessage(CreateMessage request) Parameters Type Name Description CreateMessage request Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/SDWORX.Messaging.Api.Controllers.Admin.PublicationController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Admin.PublicationController.html",
    "title": "Class PublicationController",
    "keywords": "Class PublicationController Messaging command, is the command to send a message. This can be for a certain technology, mail, push Or based on the preferences of the receiver Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ApiControllerBase PublicationController Namespace : SDWORX.Messaging.Api.Controllers.Admin Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"admin/publications\")] [ApiController] [Authorize(\"Application\")] public class PublicationController : ApiControllerBase Constructors View Source PublicationController(ILogService<PublicationController>, IPublicationService) The constructor for publication controller, dependency injection will do its magic Declaration public PublicationController(ILogService<PublicationController> log, IPublicationService publicationService) Parameters Type Name Description SDWORX.Messaging.Logging.ILogService < PublicationController > log SDWORX.Messaging.Business.Publications.Services.IPublicationService publicationService Methods View Source Delete(Guid) Delete a publication Declaration [HttpDelete(\"{publicationId}\")] [ProducesResponseType(204)] [ProducesResponseType(404)] public Task<ActionResult> Delete(Guid publicationId) Parameters Type Name Description System.Guid publicationId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult > View Source GetList() Get a list of publications Declaration [HttpGet] [ProducesResponseType(typeof(ApiResult<ICollection<Publication>>), 200)] public Task<ActionResult<ICollection<Publication>>> GetList() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < System.Collections.Generic.ICollection < Publication >>> View Source GetPublicationById(Guid) Get a publication Declaration [HttpGet(\"{publicationId:guid}\", Name = \"GetPublicationById\")] [ProducesResponseType(typeof(ApiResult<PublicationDetail>), 200)] [ProducesResponseType(404)] public async Task<ActionResult<PublicationDetail>> GetPublicationById(Guid publicationId) Parameters Type Name Description System.Guid publicationId The id of the publication Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < PublicationDetail >> View Source Post(PublicationDetail) Create a general publication for a message Declaration [HttpPost] [ProducesResponseType(typeof(ApiResult<PublicationDetail>), 201)] [ProducesResponseType(400)] public async Task<IActionResult> Post(PublicationDetail publication) Parameters Type Name Description PublicationDetail publication The publication including the body in different languages Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > View Source PublicationForTemplate(PublicationForTemplate) Post a Publication for a template Declaration [HttpPost] [Route(\"forTemplate\")] [ProducesResponseType(typeof(ApiResult<PublicationForTemplate>), 201)] [ProducesResponseType(400)] public async Task<ActionResult> PublicationForTemplate(PublicationForTemplate publicationForTemplate) Parameters Type Name Description PublicationForTemplate publicationForTemplate Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult >"
  },
  "api/SDWORX.Messaging.Api.Controllers.ApiControllerBase.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.ApiControllerBase.html",
    "title": "Class ApiControllerBase",
    "keywords": "Class ApiControllerBase Base class for all controllers, main purpose is to wrap all standard response into the SD objects Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ApiControllerBase MessageController PublicationController DeviceController NewsfeedItemController Namespace : SDWORX.Messaging.Api.Controllers Assembly : SDWORX.Messaging.Api.dll Syntax public class ApiControllerBase : ControllerBase Methods View Source Accepted() Response accepted, 202 Declaration protected AcceptedResult Accepted() Returns Type Description Microsoft.AspNetCore.Mvc.AcceptedResult View Source Accepted<T>(T) Response accepted, 202, with object to wrap Declaration protected AcceptedResult Accepted<T>(T value) Parameters Type Name Description T value The object that will be wrapped to return Returns Type Description Microsoft.AspNetCore.Mvc.AcceptedResult Type Parameters Name Description T The type of object that will be returned View Source Accepted<T>(String, T) Response accepted, 202, with object to wrap and url Declaration protected AcceptedResult Accepted<T>(string uri, T value) Parameters Type Name Description System.String uri The uri to call T value The object that will be wrapped to return Returns Type Description Microsoft.AspNetCore.Mvc.AcceptedResult Type Parameters Name Description T The type of object that will be returned View Source AcceptedAtAction<T>(String, T) Response accepted, 202, with a actionname to generate a new uri Declaration protected AcceptedAtActionResult AcceptedAtAction<T>(string actionName, T value) Parameters Type Name Description System.String actionName The actionname to create a url T value The object that will be wrapped to return Returns Type Description Microsoft.AspNetCore.Mvc.AcceptedAtActionResult Type Parameters Name Description T The type of object that will be returned View Source AcceptedAtAction<T>(String, Object, T) Response accepted, 202, with a actionname and routevalues to generate a new uri Declaration protected AcceptedAtActionResult AcceptedAtAction<T>(string actionName, object routeValues, T value) Parameters Type Name Description System.String actionName The actionname to create a url System.Object routeValues The object containing the route values T value The object that will be wrapped to return Returns Type Description Microsoft.AspNetCore.Mvc.AcceptedAtActionResult Type Parameters Name Description T The type of object that will be returned View Source BadRequest() Response bad request, 400 Declaration protected BadRequestObjectResult BadRequest() Returns Type Description Microsoft.AspNetCore.Mvc.BadRequestObjectResult View Source BadRequest<T>(T) Response bad request, 400, with object to return Declaration protected BadRequestObjectResult BadRequest<T>(T value) Parameters Type Name Description T value The object to return Returns Type Description Microsoft.AspNetCore.Mvc.BadRequestObjectResult Type Parameters Name Description T Type of object to wrap and return View Source BadRequest<T>(T, String) Response bad request, 400, with object to return and custom error message Declaration protected BadRequestObjectResult BadRequest<T>(T value, string errorMessage) Parameters Type Name Description T value The object to return System.String errorMessage The custom error message Returns Type Description Microsoft.AspNetCore.Mvc.BadRequestObjectResult Type Parameters Name Description T The type of object to return View Source Created<T>(String, T) Response created with object in body, and get uri Declaration protected CreatedResult Created<T>(string uri, T value) Parameters Type Name Description System.String uri The uri to get the newly created object T value This object will be wrapped, and is put under property \"Result\" Returns Type Description Microsoft.AspNetCore.Mvc.CreatedResult Type Parameters Name Description T The type of object that will be wrapped View Source Created<T>(Uri, T) Response created with object in body, and get uri Declaration protected CreatedResult Created<T>(Uri uri, T value) Parameters Type Name Description System.Uri uri The uri to get the newly created object T value This object will be wrapped, and is put under property \"Result\" Returns Type Description Microsoft.AspNetCore.Mvc.CreatedResult Type Parameters Name Description T The type of object that will be wrapped View Source CreatedAtAction<T>(String, T) Response created, 201, with required actionName and created object Declaration protected CreatedAtActionResult CreatedAtAction<T>(string actionName, T value) Parameters Type Name Description System.String actionName The name of the get method T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtActionResult Type Parameters Name Description T Type of created object View Source CreatedAtAction<T>(String, Object, T) Response created, 201, with required actionName and optional route value and created object Declaration protected CreatedAtActionResult CreatedAtAction<T>(string actionName, object routeValues, T value) Parameters Type Name Description System.String actionName The name of the get method System.Object routeValues The route values, can be new id of the created object T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtActionResult Type Parameters Name Description T Type of created object View Source CreatedAtAction<T>(String, String, Object, T) Response created, 201, with required actionName, optional controller name, optional route value and created object Declaration protected CreatedAtActionResult CreatedAtAction<T>(string actionName, string controllerName, object routeValues, T value) Parameters Type Name Description System.String actionName The name of the get method System.String controllerName The controller name, where the method can be found System.Object routeValues The route values, can be new id of the created object T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtActionResult Type Parameters Name Description T Type of created object View Source CreatedAtRoute<T>(Object, T) Response created, 201, with the route as object to query the new object, Declaration protected CreatedAtRouteResult CreatedAtRoute<T>(object routeValues, T value) Parameters Type Name Description System.Object routeValues The object containing all the info to route T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtRouteResult Type Parameters Name Description T Type of created object View Source CreatedAtRoute<T>(String, T) Response created, 201, with the route that can be queried to get the new object Declaration protected CreatedAtRouteResult CreatedAtRoute<T>(string routeName, T value) Parameters Type Name Description System.String routeName The url to query by id for the new object T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtRouteResult Type Parameters Name Description T Type of created object View Source CreatedAtRoute<T>(String, Object, T) Response created, 201, with the name of the route and the route as object to query the new object, Declaration protected CreatedAtRouteResult CreatedAtRoute<T>(string routeName, object routeValues, T value) Parameters Type Name Description System.String routeName The name of the route System.Object routeValues The object containing all the info to route T value The created object Returns Type Description Microsoft.AspNetCore.Mvc.CreatedAtRouteResult Type Parameters Name Description T Type of created object View Source NotFound() Response not found, 404 Declaration protected NotFoundObjectResult NotFound() Returns Type Description Microsoft.AspNetCore.Mvc.NotFoundObjectResult View Source NotFound(String) Response not found, 404, with custom error message Declaration protected NotFoundObjectResult NotFound(string errorMessage) Parameters Type Name Description System.String errorMessage The custom error message that will be used in wrapped result Returns Type Description Microsoft.AspNetCore.Mvc.NotFoundObjectResult View Source NotFound<T>(T) Response not found, 404, with object Declaration protected NotFoundObjectResult NotFound<T>(T value) Parameters Type Name Description T value The object that will be wrapped Returns Type Description Microsoft.AspNetCore.Mvc.NotFoundObjectResult Type Parameters Name Description T The type of object that will be included View Source Ok() Empty response success Declaration protected OkObjectResult Ok() Returns Type Description Microsoft.AspNetCore.Mvc.OkObjectResult View Source Ok<T>(T) Response success with object in body Declaration protected OkObjectResult Ok<T>(T value) where T : new() Parameters Type Name Description T value This object will be wrapped, and is put under property \"Result\" Returns Type Description Microsoft.AspNetCore.Mvc.OkObjectResult Type Parameters Name Description T The type of object that will be wrapped View Source Ok<T>(ICollection<T>, Int32, Nullable<Int32>, Nullable<Int32>, String) Response success with paged api result Declaration protected OkObjectResult Ok<T>(ICollection<T> value, int total, int? page, int? pageSize, string baseUrl) where T : new() Parameters Type Name Description System.Collections.Generic.ICollection <T> value System.Int32 total System.Nullable < System.Int32 > page System.Nullable < System.Int32 > pageSize System.String baseUrl Returns Type Description Microsoft.AspNetCore.Mvc.OkObjectResult Type Parameters Name Description T View Source Unauthorized() Response unauthorized, 401 Declaration protected UnauthorizedObjectResult Unauthorized() Returns Type Description Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult View Source Unauthorized<T>(T) Response unauthorized, 401, with return object Declaration protected UnauthorizedObjectResult Unauthorized<T>(T value) Parameters Type Name Description T value The return object Returns Type Description Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult Type Parameters Name Description T The type of the return object"
  },
  "api/SDWORX.Messaging.Api.Controllers.DiagnosticsController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.DiagnosticsController.html",
    "title": "Class DiagnosticsController",
    "keywords": "Class DiagnosticsController Diagnostic controller contains methods to test certain processes Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase DiagnosticsController Namespace : SDWORX.Messaging.Api.Controllers Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"Diagnostics\")] [ApiController] public class DiagnosticsController : ControllerBase Constructors View Source DiagnosticsController(ILogService<DiagnosticsController>, IAuthenticationSettings, IMessagingOrchestrationPushService, ISDMailService, IOAuthFlowFactory) Constructor for diagnostic controller Declaration public DiagnosticsController(ILogService<DiagnosticsController> logger, IAuthenticationSettings authenticationSettings, IMessagingOrchestrationPushService pushService, ISDMailService sdMailService, IOAuthFlowFactory oAuthFlowFactory) Parameters Type Name Description SDWORX.Messaging.Logging.ILogService < DiagnosticsController > logger SDWORX.Messaging.Api.Authentication.IAuthenticationSettings authenticationSettings SDWORX.Messaging.Bus.MessagingOrchestration.IMessagingOrchestrationPushService pushService SDWORX.Messaging.Infrastructure.SDMailer.ISDMailService sdMailService SDWORX.Postprocessing.Oidc.Tools.IOAuthFlowFactory oAuthFlowFactory Methods View Source GetBadAccessTokenAsync() Temporary : This method generates an invalid access token, only for testing, must be removed for production Declaration [AllowAnonymous] [HttpPost] [Route(\"GetBadAccessToken\")] public Task<IActionResult> GetBadAccessTokenAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > View Source GetGoodAccessTokenAsync() Temporary : This method generates a valid access token, only for testing purposes, must be removed for production Declaration [AllowAnonymous] [HttpPost] [Route(\"GetGoodAccessToken\")] public Task<IActionResult> GetGoodAccessTokenAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > View Source GetGroupsApiAccessTokenAsync() Get an access token that can be used on the swagger page of groups api Declaration [AllowAnonymous] [HttpPost] [Route(\"GetGroupsApiAccessToken\")] public async Task<IActionResult> GetGroupsApiAccessTokenAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > View Source IsAlive() The method to check if the api is alive Declaration [HttpGet] [Route(\"IsAlive\")] [AllowAnonymous] public IActionResult IsAlive() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult View Source IsTokenOkAndAnApplication() This method will validate if the access token in the header is valid Declaration [HttpGet] [Route(\"IsTokenOkAndAnApplication\")] [Authorize(\"Authenticated\")] public IActionResult IsTokenOkAndAnApplication() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult View Source SendDummyMailAsync() Test that goes end to end to see if service will in the end send an email Declaration [HttpPost] [Route(\"SendDummyMail\")] [Authorize(\"Authenticated\")] public async Task SendDummyMailAsync() Returns Type Description System.Threading.Tasks.Task View Source SendNServiceBusMessageAsync() Test to see if nServiceBus is working Declaration [HttpPost] [Authorize(\"Authenticated\")] [Route(\"SendNServiceBusMessage\")] public async Task<IActionResult> SendNServiceBusMessageAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/SDWORX.Messaging.Api.Controllers.HealthsController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.HealthsController.html",
    "title": "Class HealthsController",
    "keywords": "Class HealthsController Healths controller, will run tests with 3rd parties to see if all services are available Inheritance System.Object HealthsController Namespace : SDWORX.Messaging.Api.Controllers Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"Health\")] [ApiController] [AllowAnonymous] public class HealthsController Constructors View Source HealthsController(IEnumerable<IDiagnosticTest>, ILogService<HealthsController>) Constructor Declaration public HealthsController(IEnumerable<IDiagnosticTest> testServices, ILogService<HealthsController> loggerService) Parameters Type Name Description System.Collections.Generic.IEnumerable < SDWORX.Framework.DiagnosticTests.IDiagnosticTest > testServices SDWORX.Messaging.Logging.ILogService < HealthsController > loggerService Methods View Source Get() Get the health check Declaration [HttpGet] public async Task<HealthInformation> Get() Returns Type Description System.Threading.Tasks.Task < SDWA.Providers.Contracts.HealthInformation > Health information, with time to connect to 3rd parties"
  },
  "api/SDWORX.Messaging.Api.Controllers.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.html",
    "title": "Namespace SDWORX.Messaging.Api.Controllers",
    "keywords": "Namespace SDWORX.Messaging.Api.Controllers Classes ApiControllerBase Base class for all controllers, main purpose is to wrap all standard response into the SD objects DiagnosticsController Diagnostic controller contains methods to test certain processes HealthsController Healths controller, will run tests with 3rd parties to see if all services are available"
  },
  "api/SDWORX.Messaging.Api.Controllers.Me.DeviceController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Me.DeviceController.html",
    "title": "Class DeviceController",
    "keywords": "Class DeviceController Device controller Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ApiControllerBase DeviceController Namespace : SDWORX.Messaging.Api.Controllers.Me Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"me/devices/\")] [ApiController] [Authorize(\"User\")] public class DeviceController : ApiControllerBase Constructors View Source DeviceController(IDeviceService) Constructor Declaration public DeviceController(IDeviceService deviceService) Parameters Type Name Description SDWORX.Messaging.Business.Devices.Services.IDeviceService deviceService Methods View Source RegisterDevice(DeviceInstallation) Register a device. Declaration [HttpPut] [ProducesResponseType(typeof(ApiResult), 204)] public async Task<ActionResult> RegisterDevice([FromBody] DeviceInstallation device) Parameters Type Name Description DeviceInstallation device The device installation Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult > View Source RemoveRegistration(String) Delete device registration Declaration [HttpDelete] [ProducesResponseType(typeof(ApiResult), 200)] [Route(\"{installationId}\")] public async Task<ActionResult> RemoveRegistration([FromRoute] string installationId) Parameters Type Name Description System.String installationId The id of the installation Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult >"
  },
  "api/SDWORX.Messaging.Api.Controllers.Me.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Me.html",
    "title": "Namespace SDWORX.Messaging.Api.Controllers.Me",
    "keywords": "Namespace SDWORX.Messaging.Api.Controllers.Me Classes DeviceController Device controller NewsfeedItemController The newsfeed item controller"
  },
  "api/SDWORX.Messaging.Api.Controllers.Me.NewsfeedItemController.html": {
    "href": "api/SDWORX.Messaging.Api.Controllers.Me.NewsfeedItemController.html",
    "title": "Class NewsfeedItemController",
    "keywords": "Class NewsfeedItemController The newsfeed item controller Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ApiControllerBase NewsfeedItemController Namespace : SDWORX.Messaging.Api.Controllers.Me Assembly : SDWORX.Messaging.Api.dll Syntax [Route(\"me/newsfeeditems\")] [ApiController] [Authorize(\"User\")] public class NewsfeedItemController : ApiControllerBase Constructors View Source NewsfeedItemController(ILogService<NewsfeedItemController>, INewsfeedItemService, ISieveProcessor, IConfiguration) Constructor Declaration public NewsfeedItemController(ILogService<NewsfeedItemController> log, INewsfeedItemService newsfeedService, ISieveProcessor sieveProcessor, IConfiguration configuration) Parameters Type Name Description SDWORX.Messaging.Logging.ILogService < NewsfeedItemController > log SDWORX.Messaging.Business.NewsfeedItems.Services.INewsfeedItemService newsfeedService Sieve.Services.ISieveProcessor sieveProcessor Microsoft.Extensions.Configuration.IConfiguration configuration Methods View Source Delete(Guid) Delete newsfeed item Declaration [HttpDelete(\"{newsfeedItemId}\")] [ProducesResponseType(204)] [ProducesResponseType(404)] public Task<ActionResult> Delete([FromRoute] Guid newsfeedItemId) Parameters Type Name Description System.Guid newsfeedItemId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult > Exceptions Type Condition System.NotImplementedException View Source GetActions(Guid) Get actions of a newsfeed item Declaration [HttpGet(\"{newsfeedItemId}/actions\")] [ProducesResponseType(typeof(ApiResult<object>), 200)] [ProducesResponseType(404)] public Task<ActionResult<object>> GetActions([FromRoute] Guid newsfeedItemId) Parameters Type Name Description System.Guid newsfeedItemId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < System.Object >> View Source GetContent(Guid) Get content of a newsfeed item Declaration [HttpGet(\"{newsfeedItemId}/content\")] [ProducesResponseType(typeof(ApiResult<object>), 200)] [ProducesResponseType(404)] public Task<ActionResult<object>> GetContent([FromRoute] Guid newsfeedItemId) Parameters Type Name Description System.Guid newsfeedItemId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < System.Object >> View Source GetList(String, String, Boolean, Nullable<Int32>, Nullable<Int32>) Get a list of newsfeed items Declaration [HttpGet(Name = \"GetList\")] [ProducesResponseType(typeof(PagedApiResult<NewsfeedItemDetail>), 200)] public async Task<ActionResult<PagedApiResult<NewsfeedItemDetail>>> GetList([FromQuery, CanBeNull] string includeTag, [FromQuery, CanBeNull] string excludeTag, [FromQuery] bool spotlight = false, [FromQuery] int? page = 1, [FromQuery] int? count = 10) Parameters Type Name Description System.String includeTag System.String excludeTag System.Boolean spotlight System.Nullable < System.Int32 > page System.Nullable < System.Int32 > count Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < SDWORX.Messaging.Api.Paging.PagedApiResult < NewsfeedItemDetail >>> View Source UpdateNewsfeedItemIsDismissedFromHome(Guid) To update the newsfeed item so it is no longer visible in the spotlight query Declaration [HttpPut(\"{NewsfeedItemId}/dismiss-from-home\")] [ProducesResponseType(typeof(ApiResult<object>), 200)] [ProducesResponseType(404)] public Task<ActionResult<object>> UpdateNewsfeedItemIsDismissedFromHome([FromRoute] Guid newsfeedItemId) Parameters Type Name Description System.Guid newsfeedItemId The id of the newsfeed item you want to update Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < System.Object >> Exceptions Type Condition System.NotImplementedException View Source UpdateNewsfeedItemIsRead(Guid) To update the newsfeed item so it is marked as read Declaration [HttpPut(\"{NewsfeedItemId}/read\")] [ProducesResponseType(typeof(ApiResult<object>), 200)] [ProducesResponseType(404)] public Task<ActionResult<object>> UpdateNewsfeedItemIsRead([FromRoute] Guid newsfeedItemId) Parameters Type Name Description System.Guid newsfeedItemId The id of the newsfeed item that was read Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.ActionResult < System.Object >> Exceptions Type Condition System.NotImplementedException"
  },
  "api/SDWORX.Messaging.Contracts.Devices.DeviceInstallation.html": {
    "href": "api/SDWORX.Messaging.Contracts.Devices.DeviceInstallation.html",
    "title": "Class DeviceInstallation",
    "keywords": "Class DeviceInstallation Inheritance System.Object DeviceInstallation Namespace : SDWORX.Messaging.Contracts.Devices Assembly : SDWORX.Messaging.Contracts.dll Syntax public sealed class DeviceInstallation Properties View Source InstallationId Declaration public string InstallationId { get; set; } Property Value Type Description System.String View Source Platform Declaration public DevicePlatform Platform { get; set; } Property Value Type Description DevicePlatform View Source PushChannel Declaration public string PushChannel { get; set; } Property Value Type Description System.String"
  },
  "api/SDWORX.Messaging.Contracts.Devices.DevicePlatform.html": {
    "href": "api/SDWORX.Messaging.Contracts.Devices.DevicePlatform.html",
    "title": "Enum DevicePlatform",
    "keywords": "Enum DevicePlatform Namespace : SDWORX.Messaging.Contracts.Devices Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum DevicePlatform Fields Name Description Apple Google"
  },
  "api/SDWORX.Messaging.Contracts.Devices.html": {
    "href": "api/SDWORX.Messaging.Contracts.Devices.html",
    "title": "Namespace SDWORX.Messaging.Contracts.Devices",
    "keywords": "Namespace SDWORX.Messaging.Contracts.Devices Classes DeviceInstallation Enums DevicePlatform"
  },
  "api/SDWORX.Messaging.Contracts.Messages.Content.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.Content.html",
    "title": "Enum Content",
    "keywords": "Enum Content Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum Content Fields Name Description AppLink Html Json None PlainText Url"
  },
  "api/SDWORX.Messaging.Contracts.Messages.CreateMessage.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.CreateMessage.html",
    "title": "Class CreateMessage",
    "keywords": "Class CreateMessage Inheritance System.Object CreateMessage Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public class CreateMessage Properties View Source Arguments Declaration public ICollection<string> Arguments { get; set; } Property Value Type Description System.Collections.Generic.ICollection < System.String > View Source AuthorId Declaration public string AuthorId { get; set; } Property Value Type Description System.String View Source IsATemplate Declaration public bool IsATemplate { get; set; } Property Value Type Description System.Boolean View Source Tags Declaration public virtual ICollection<string> Tags { get; set; } Property Value Type Description System.Collections.Generic.ICollection < System.String > View Source Translations Declaration public virtual ICollection<MessageTranslation> Translations { get; set; } Property Value Type Description System.Collections.Generic.ICollection < MessageTranslation >"
  },
  "api/SDWORX.Messaging.Contracts.Messages.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.html",
    "title": "Namespace SDWORX.Messaging.Contracts.Messages",
    "keywords": "Namespace SDWORX.Messaging.Contracts.Messages Classes CreateMessage Message MessageAction MessageBody MessageTranslation Enums Content MessageActionVerb"
  },
  "api/SDWORX.Messaging.Contracts.Messages.Message.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.Message.html",
    "title": "Class Message",
    "keywords": "Class Message Inheritance System.Object Message Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public class Message Properties View Source Arguments Declaration public ICollection<string> Arguments { get; set; } Property Value Type Description System.Collections.Generic.ICollection < System.String > View Source AuthorId Declaration public string AuthorId { get; set; } Property Value Type Description System.String View Source CreatedDateTimeUtc Declaration public DateTime CreatedDateTimeUtc { get; set; } Property Value Type Description System.DateTime View Source DeletedDateTimeUtc Declaration public DateTime? DeletedDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source Id Declaration public Guid Id { get; set; } Property Value Type Description System.Guid View Source IsATemplate Declaration public bool IsATemplate { get; set; } Property Value Type Description System.Boolean View Source ModifiedById Declaration public Guid? ModifiedById { get; set; } Property Value Type Description System.Nullable < System.Guid > View Source ModifiedDateTimeUtc Declaration public DateTime? ModifiedDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source Tags Declaration public ICollection<string> Tags { get; set; } Property Value Type Description System.Collections.Generic.ICollection < System.String > View Source Translations Declaration public ICollection<MessageTranslation> Translations { get; set; } Property Value Type Description System.Collections.Generic.ICollection < MessageTranslation >"
  },
  "api/SDWORX.Messaging.Contracts.Messages.MessageAction.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.MessageAction.html",
    "title": "Class MessageAction",
    "keywords": "Class MessageAction Inheritance System.Object MessageAction Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public class MessageAction Properties View Source DeleteOnExecute Declaration public bool DeleteOnExecute { get; set; } Property Value Type Description System.Boolean View Source Id Declaration public Guid Id { get; set; } Property Value Type Description System.Guid View Source JsonBody Declaration public string JsonBody { get; set; } Property Value Type Description System.String View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String View Source Title Declaration public string Title { get; set; } Property Value Type Description System.String View Source Uri Declaration public Uri Uri { get; set; } Property Value Type Description System.Uri View Source Verb Declaration public MessageActionVerb Verb { get; set; } Property Value Type Description MessageActionVerb"
  },
  "api/SDWORX.Messaging.Contracts.Messages.MessageActionVerb.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.MessageActionVerb.html",
    "title": "Enum MessageActionVerb",
    "keywords": "Enum MessageActionVerb Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum MessageActionVerb Fields Name Description ApplicationPageUrl BrowserUrl Delete Get None Post Put"
  },
  "api/SDWORX.Messaging.Contracts.Messages.MessageBody.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.MessageBody.html",
    "title": "Class MessageBody",
    "keywords": "Class MessageBody Inheritance System.Object MessageBody Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public class MessageBody Properties View Source Content Declaration public Content Content { get; set; } Property Value Type Description Content View Source LanguageIsoCode Declaration public string LanguageIsoCode { get; set; } Property Value Type Description System.String View Source MessageId Declaration public Guid MessageId { get; set; } Property Value Type Description System.Guid View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String"
  },
  "api/SDWORX.Messaging.Contracts.Messages.MessageTranslation.html": {
    "href": "api/SDWORX.Messaging.Contracts.Messages.MessageTranslation.html",
    "title": "Class MessageTranslation",
    "keywords": "Class MessageTranslation Inheritance System.Object MessageTranslation Namespace : SDWORX.Messaging.Contracts.Messages Assembly : SDWORX.Messaging.Contracts.dll Syntax public class MessageTranslation Properties View Source Actions Declaration public ICollection<MessageAction> Actions { get; set; } Property Value Type Description System.Collections.Generic.ICollection < MessageAction > View Source ApplicationPageUri Declaration public Uri ApplicationPageUri { get; set; } Property Value Type Description System.Uri View Source ExternalUri Declaration public Uri ExternalUri { get; set; } Property Value Type Description System.Uri View Source IconUri Declaration public Uri IconUri { get; set; } Property Value Type Description System.Uri View Source Label Declaration public string Label { get; set; } Property Value Type Description System.String View Source LanguageIsoCode Declaration public string LanguageIsoCode { get; set; } Property Value Type Description System.String View Source MessageBodies Declaration public ICollection<MessageBody> MessageBodies { get; set; } Property Value Type Description System.Collections.Generic.ICollection < MessageBody > View Source Sublabel Declaration public string Sublabel { get; set; } Property Value Type Description System.String View Source Title Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/SDWORX.Messaging.Contracts.NewsfeedItems.html": {
    "href": "api/SDWORX.Messaging.Contracts.NewsfeedItems.html",
    "title": "Namespace SDWORX.Messaging.Contracts.NewsfeedItems",
    "keywords": "Namespace SDWORX.Messaging.Contracts.NewsfeedItems Classes NewsfeedItem NewsfeedItemDetail"
  },
  "api/SDWORX.Messaging.Contracts.NewsfeedItems.NewsfeedItem.html": {
    "href": "api/SDWORX.Messaging.Contracts.NewsfeedItems.NewsfeedItem.html",
    "title": "Class NewsfeedItem",
    "keywords": "Class NewsfeedItem Inheritance System.Object NewsfeedItem Namespace : SDWORX.Messaging.Contracts.NewsfeedItems Assembly : SDWORX.Messaging.Contracts.dll Syntax public class NewsfeedItem Properties View Source ContentReadDateTimeUtc Declaration public DateTime? ContentReadDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source CreatedDateTimeUtc Declaration public DateTime CreatedDateTimeUtc { get; set; } Property Value Type Description System.DateTime View Source DeletedDateTimeUtc Declaration public DateTime? DeletedDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source Id Declaration public Guid Id { get; set; } Property Value Type Description System.Guid View Source MessageReadDateTimeUtc Declaration public DateTime? MessageReadDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source PersonalProfileObjectId Declaration public Guid PersonalProfileObjectId { get; set; } Property Value Type Description System.Guid View Source PublicationId Declaration public Guid PublicationId { get; set; } Property Value Type Description System.Guid View Source ShowInSpotlight Declaration public bool ShowInSpotlight { get; set; } Property Value Type Description System.Boolean"
  },
  "api/SDWORX.Messaging.Contracts.NewsfeedItems.NewsfeedItemDetail.html": {
    "href": "api/SDWORX.Messaging.Contracts.NewsfeedItems.NewsfeedItemDetail.html",
    "title": "Class NewsfeedItemDetail",
    "keywords": "Class NewsfeedItemDetail Inheritance System.Object NewsfeedItemDetail Namespace : SDWORX.Messaging.Contracts.NewsfeedItems Assembly : SDWORX.Messaging.Contracts.dll Syntax public class NewsfeedItemDetail Constructors View Source NewsfeedItemDetail() Declaration public NewsfeedItemDetail() Properties View Source Actions Declaration public List<MessageAction> Actions { get; set; } Property Value Type Description System.Collections.Generic.List < MessageAction > View Source CompanyId Declaration public string CompanyId { get; set; } Property Value Type Description System.String View Source IconUrl Declaration public Uri IconUrl { get; set; } Property Value Type Description System.Uri View Source IsHomeScreenVisible Declaration public bool IsHomeScreenVisible { get; set; } Property Value Type Description System.Boolean View Source IsRead Declaration public bool IsRead { get; set; } Property Value Type Description System.Boolean View Source Label Declaration public string Label { get; set; } Property Value Type Description System.String View Source NewsfeedId Declaration public string NewsfeedId { get; set; } Property Value Type Description System.String View Source Sublabel Declaration public string Sublabel { get; set; } Property Value Type Description System.String View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String View Source Title Declaration public string Title { get; set; } Property Value Type Description System.String View Source TypeOfContent Declaration public Content TypeOfContent { get; set; } Property Value Type Description Content"
  },
  "api/SDWORX.Messaging.Contracts.Publications.AddresseeIdentifier.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.AddresseeIdentifier.html",
    "title": "Enum AddresseeIdentifier",
    "keywords": "Enum AddresseeIdentifier Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum AddresseeIdentifier Fields Name Description GroupId PersonalProfileObjectId Unknown UserIdForApplicationMySalary"
  },
  "api/SDWORX.Messaging.Contracts.Publications.ChannelPreference.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.ChannelPreference.html",
    "title": "Enum ChannelPreference",
    "keywords": "Enum ChannelPreference Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax [Flags] public enum ChannelPreference Fields Name Description NewsFeedItem None PushNotification SdMail Sendgrid"
  },
  "api/SDWORX.Messaging.Contracts.Publications.CompanyIdentifier.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.CompanyIdentifier.html",
    "title": "Enum CompanyIdentifier",
    "keywords": "Enum CompanyIdentifier Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum CompanyIdentifier Fields Name Description Account Affiliate Oeg SubAffiliate"
  },
  "api/SDWORX.Messaging.Contracts.Publications.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.html",
    "title": "Namespace SDWORX.Messaging.Contracts.Publications",
    "keywords": "Namespace SDWORX.Messaging.Contracts.Publications Classes MessagePublishedResult Publication PublicationAddressee PublicationDetail PublicationForTemplate TranslatedArguments Enums AddresseeIdentifier ChannelPreference CompanyIdentifier Priority"
  },
  "api/SDWORX.Messaging.Contracts.Publications.MessagePublishedResult.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.MessagePublishedResult.html",
    "title": "Class MessagePublishedResult",
    "keywords": "Class MessagePublishedResult Inheritance System.Object MessagePublishedResult Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public class MessagePublishedResult Properties View Source MessageId Declaration public Guid MessageId { get; set; } Property Value Type Description System.Guid View Source PublicationId Declaration public Guid PublicationId { get; set; } Property Value Type Description System.Guid"
  },
  "api/SDWORX.Messaging.Contracts.Publications.Priority.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.Priority.html",
    "title": "Enum Priority",
    "keywords": "Enum Priority Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public enum Priority Fields Name Description High Low Normal Unknown"
  },
  "api/SDWORX.Messaging.Contracts.Publications.Publication.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.Publication.html",
    "title": "Class Publication",
    "keywords": "Class Publication Inheritance System.Object Publication PublicationDetail PublicationForTemplate Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public class Publication Properties View Source Application Declaration public string Application { get; set; } Property Value Type Description System.String View Source Category Declaration public string Category { get; set; } Property Value Type Description System.String View Source CompanyId Declaration public string CompanyId { get; set; } Property Value Type Description System.String View Source CompanyIdentifier Declaration public CompanyIdentifier CompanyIdentifier { get; set; } Property Value Type Description CompanyIdentifier View Source CreatedDateTimeUtc Declaration public DateTime CreatedDateTimeUtc { get; set; } Property Value Type Description System.DateTime View Source DeletedDateTimeUtc Declaration public DateTime? DeletedDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source DoNotSendBeforeDateTimeUtc Declaration public DateTime DoNotSendBeforeDateTimeUtc { get; set; } Property Value Type Description System.DateTime View Source ExcludeFromStatistics Declaration public bool ExcludeFromStatistics { get; set; } Property Value Type Description System.Boolean View Source ExpirationDateTimeUtc Declaration public DateTime? ExpirationDateTimeUtc { get; set; } Property Value Type Description System.Nullable < System.DateTime > View Source Id Declaration public Guid Id { get; set; } Property Value Type Description System.Guid View Source IdentifierWithinApplication Declaration public string IdentifierWithinApplication { get; set; } Property Value Type Description System.String View Source PreferredCompanyChannels Declaration public ChannelPreference PreferredCompanyChannels { get; set; } Property Value Type Description ChannelPreference View Source Priority Declaration public Priority Priority { get; set; } Property Value Type Description Priority View Source PublisherId Declaration public string PublisherId { get; set; } Property Value Type Description System.String View Source ShowInSpotlight Declaration public bool ShowInSpotlight { get; set; } Property Value Type Description System.Boolean"
  },
  "api/SDWORX.Messaging.Contracts.Publications.PublicationAddressee.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.PublicationAddressee.html",
    "title": "Class PublicationAddressee",
    "keywords": "Class PublicationAddressee Inheritance System.Object PublicationAddressee Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public class PublicationAddressee Properties View Source AddresseeId Declaration public string AddresseeId { get; set; } Property Value Type Description System.String View Source AddresseeIdentifier Declaration public AddresseeIdentifier AddresseeIdentifier { get; set; } Property Value Type Description AddresseeIdentifier"
  },
  "api/SDWORX.Messaging.Contracts.Publications.PublicationDetail.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.PublicationDetail.html",
    "title": "Class PublicationDetail",
    "keywords": "Class PublicationDetail Inheritance System.Object Publication PublicationDetail Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public class PublicationDetail : Publication Properties View Source Message Declaration public Message Message { get; set; } Property Value Type Description Message View Source PublicationAddressees Declaration public ICollection<PublicationAddressee> PublicationAddressees { get; set; } Property Value Type Description System.Collections.Generic.ICollection < PublicationAddressee >"
  },
  "api/SDWORX.Messaging.Contracts.Publications.PublicationForTemplate.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.PublicationForTemplate.html",
    "title": "Class PublicationForTemplate",
    "keywords": "Class PublicationForTemplate Inheritance System.Object Publication PublicationForTemplate Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public class PublicationForTemplate : Publication Properties View Source Arguments Declaration public ICollection<TranslatedArguments> Arguments { get; set; } Property Value Type Description System.Collections.Generic.ICollection < TranslatedArguments > View Source MessageId Declaration public Guid MessageId { get; set; } Property Value Type Description System.Guid View Source PublicationAddressees Declaration public ICollection<PublicationAddressee> PublicationAddressees { get; set; } Property Value Type Description System.Collections.Generic.ICollection < PublicationAddressee >"
  },
  "api/SDWORX.Messaging.Contracts.Publications.TranslatedArguments.html": {
    "href": "api/SDWORX.Messaging.Contracts.Publications.TranslatedArguments.html",
    "title": "Class TranslatedArguments",
    "keywords": "Class TranslatedArguments Inheritance System.Object TranslatedArguments Namespace : SDWORX.Messaging.Contracts.Publications Assembly : SDWORX.Messaging.Contracts.dll Syntax public sealed class TranslatedArguments Properties View Source Data Declaration public Dictionary<string, string> Data { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > View Source Language Declaration public string Language { get; set; } Property Value Type Description System.String"
  },
  "index.html": {
    "href": "index.html",
    "title": "Messaging API.",
    "keywords": "Messaging API. Introduction: The messaging APi is a centralized API for sending all types of messages, email, push notifications, newsfeed items etc.."
  },
  "topics/authentication.html": {
    "href": "topics/authentication.html",
    "title": "Authentication",
    "keywords": "Authentication You will need a ClientId and secret to get access to your authentication token. Being an API, we provide a mechanism to authenticate between two computers, the so called machine-to-machine authentication which is provided by CIA. You will need to connect with an OAUTH implementation at the client’s side, so you need to provide a JWT bearer authentication token in your Authorization header. Using your ClientId and secret. This flow will be used for the Admin endpoints. Your token will need a scope of CentralMessagingService For the Me endpoints the API expects a token containing a scope of MeMessagingService and needs to contain a PersonalProfileObjectId in it's sub Cia token endpoint production Cia token endpoint acceptance"
  },
  "topics/domains/adminPublications.html": {
    "href": "topics/domains/adminPublications.html",
    "title": "admin/publications",
    "keywords": "admin/publications The publications domain is al about the publication of messages, either directly or to publish an already existing message template in the database. The publication model { \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"companyId\": \"string\", \"companyIdentifier\": \"Account\", \"application\": \"string\", \"identifierWithinApplication\": \"string\", \"publisherId\": \"string\", \"category\": \"string\", \"priority\": \"Unknown\", \"doNotSendBeforeDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"expirationDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"preferredCompanyChannels\": \"None\", \"showInSpotlight\": true, \"excludeFromStatistics\": true, \"createdDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"deletedDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"message\": { \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"authorId\": \"string\", \"isATemplate\": true, \"createdDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"modifiedDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"modifiedById\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"deletedDateTimeUtc\": \"2021-10-27T12:09:10.688Z\", \"tags\": [ \"string\" ], \"arguments\": [ \"string\" ], \"translations\": [ { \"languageIsoCode\": \"string\", \"title\": \"string\", \"label\": \"string\", \"sublabel\": \"string\", \"iconUri\": \"string\", \"applicationPageUri\": \"string\", \"externalUri\": \"string\", \"messageBodies\": [ { \"messageId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"languageIsoCode\": \"string\", \"content\": \"None\", \"text\": \"string\" } ], \"actions\": [ { \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"name\": \"string\", \"title\": \"string\", \"uri\": \"string\", \"jsonBody\": \"string\", \"deleteOnExecute\": true, \"verb\": \"None\" } ] } ] }, \"publicationAddressees\": [ { \"addresseeId\": \"string\", \"addresseeIdentifier\": \"Unknown\" } ] } Vocabulary publicationAddressees A collection of addressees for the publication, the identifier can be of the following types: Value Description GroupId Send to group PersonalProfileObjectId Send to personal profile object id UserIdForApplicationMijnLoon Send to user id for application MySalary messageBodies A collection to specify the different possible contents of your message, these can be of the following content types: Value Description HTML A message body in formatted HTML (i.e. Email) JSON A message body in JSON Plaintext A message body in plain text (i.e. Email backup) Endpoints POST /admin​/publications​/ An endpoint to post your publication, including your message. Returns: 201: The 201 CreatedAt returns a location to retrieve your publication. 400: Bad request, see exception message. Example: In this example you can see a publication for a message with 2 languages included, sent to a single PersonalProfileObjectId { \"companyId\":\"string\", \"companyIdentifier\":\"Account\", \"application\":\"string\", \"identifierWithinApplication\":\"string\", \"publisherId\":\"string\", \"category\":\"string\", \"priority\":\"Unknown\", \"doNotSendBeforeDateTimeUtc\":\"2021-09-20T08:38:58.247Z\", \"expirationDateTimeUtc\":\"2021-09-20T08:38:58.247Z\", \"preferredCompanyChannels\":\"None\", \"showInSpotlight\":true, \"excludeFromStatistics\":true, \"message\":{ \"isATemplate\":false, \"translations\":[ { \"languageIsoCode\":\"NL\", \"title\":\"Test Title NL\", \"label\":\"Test Label NL\", \"sublabel\":\"Test Sublabel NL\", \"iconUri\":\"https://www.sdworx.be/assets/corporate/img/sdworx_logo.svg\", \"applicationPageUri\":\"https://www.sdworx.be\", \"externalUri\":\"https://www.sdworx.be\", \"arguments\":{ }, \"messageBodies\":[ { \"content\":\"Html\", \"text\":\"<html><body><h1>this is a test</h1><p>This is a test message NL</p></body></html>\" } ] }, { \"languageIsoCode\":\"EN\", \"title\":\"Test Title EN\", \"label\":\"Test Label EN\", \"sublabel\":\"Test Sublabel EN\", \"iconUri\":\"https://www.sdworx.be/assets/corporate/img/sdworx_logo.svg\", \"applicationPageUri\":\"https://www.sdworx.be\", \"externalUri\":\"https://www.sdworx.be\", \"arguments\":{ }, \"messageBodies\":[ { \"content\":\"Html\", \"text\":\"<html><body><h1>this is a test</h1><p>This is a test message EN</p></body></html>\" } ] } ] }, \"publicationAddressees\":[ { \"addresseeId\":\"5401d758-4825-490b-92b6-9ce1e1923785\", \"addresseeIdentifier\":\"PersonalProfileObjectId\" } ] } GET /admin​/publications​/{publicationId} An endpoint to retrieve an already existing publication, this can be achieved by including the publicationId as a URL parameter. This also the endpoint used in the location header of the POST. Returns: 200: Returns the requested publication 404: Publication not found POST /admin/publications/forTemplate An endpoint to publish a message that exists as a template in the database. Structure is similar to a normal publication, except that the message is replaced by a messageId. The publication also has a collection of arguments for each language, these are only needed if your template needs replacements. If the provided arguments do not match the specified template, you will get an exception. Returns: 201: The 201 CreatedAt returns a location to retrieve your publication. 400: Bad request, see exception message. Example: { \"companyId\": \"string\", \"companyIdentifier\": \"Account\", \"application\": \"string\", \"identifierWithinApplication\": \"string\", \"publisherId\": \"string\", \"category\": \"string\", \"priority\": \"Unknown\", \"doNotSendBeforeDateTimeUtc\": \"2021-10-27T12:47:14.789Z\", \"expirationDateTimeUtc\": \"2021-10-27T12:47:14.789Z\", \"preferredCompanyChannels\": \"None\", \"showInSpotlight\": true, \"excludeFromStatistics\": true, \"createdDateTimeUtc\": \"2021-10-27T12:47:14.789Z\", \"deletedDateTimeUtc\": \"2021-10-27T12:47:14.789Z\", \"messageId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"arguments\": [ { \"language\": \"NL\", \"data\": { \"DocumentType\": \"Loonbrief\", } }, { \"language\": \"EN\", \"data\": { \"DocumentType\": \"Payslip\", } } ], \"publicationAddressees\": [ { \"addresseeId\": \"string\", \"addresseeIdentifier\": \"Unknown\" } ] }"
  },
  "topics/domains/meDevices.html": {
    "href": "topics/domains/meDevices.html",
    "title": "me/devices",
    "keywords": "me/devices This domain is all about the registration of your device, it is used to register a users information to the notification hub. Endpoints PUT /me/devices An endpoint to register a device. The platform can be Apple or Google. Returns: 204: No content Example: { \"installationId\": \"string\", \"pushChannel\": \"string\", \"platform\": \"Google\" } DELETE /me/devices/{installationId} An endpoint to delete a registration. An installationId is required as a Url Parameter. Returns: 200: OK"
  },
  "topics/domains/meNewsfeeditems.html": {
    "href": "topics/domains/meNewsfeeditems.html",
    "title": "me/newsfeedItems",
    "keywords": "me/newsfeedItems This domain is used to handle a users newsfeed items. Endpoints GET /me/newsfeedItems An endpoint to retrieve a list of newsfeed items for the authorized user. This endpoint accepts the following parameters to filter the newsfeed items. Parameter Description Type includetag Tags to include string excludeTag Tags to exclude string spotlight Spotlight items only boolean page Page number integer count Number of items per page integer Return example: The newsfeedId in the result can be used to call one of the other endpoints to get content, actions or delete a newsfeedItem. { \"state\": \"Success\", \"error\": { \"message\": \"string\" }, \"result\": { \"items\": [ { \"newsfeedId\": \"string\", \"companyId\": \"string\", \"title\": \"string\", \"label\": \"string\", \"sublabel\": \"string\", \"typeOfContent\": \"None\", \"iconUrl\": \"string\", \"isRead\": true, \"isHomeScreenVisible\": true, }, { \"newsfeedId\": \"string\", \"companyId\": \"string\", \"title\": \"string\", \"label\": \"string\", \"sublabel\": \"string\", \"typeOfContent\": \"None\", \"iconUrl\": \"string\", \"isRead\": true, \"isHomeScreenVisible\": true, } ], \"total\": 0, \"page\": 0, \"count\": 0, \"hasMore\": true, \"nextPageUrl\": \"string\", \"previousPageUrl\": \"string\", \"firstPageUrl\": \"string\", \"lastPageUrl\": \"string\" } } Delete /me/newsfeeditems/{newsfeedItemId} An endpoint to delete a newsfeed item. It requires a newsfeedItemId as a Url parameter. Returns: 204: No Content to return 404: Newsfeed item not found. Put /me/newsfeeditems/{NewsfeedItemId}/read An endpoint to mark the newsfeed item as read. It requires a newsfeedItemId as a Url parameter. Returns: 200: OK 404: Newsfeed item not found. Put /me/newsfeeditems/{NewsfeedItemId}/dismiss-from-home An endpoint to dismiss the newsfeed item from the homepage. It requires a newsfeedItemId as a Url parameter. Returns: 200: OK 404: Newsfeed item not found."
  },
  "topics/responses.html": {
    "href": "topics/responses.html",
    "title": "Responses",
    "keywords": "Responses The messaging API uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with the SD-worx servers. Value Description 200 - OK Everything worked as expected. 201 - Created Your created resource is available at the Location provided. 202 - Accepted Your request is accepted. 204 - No Content No content to return. 400 - Bad Request The request was unacceptable, often due to missing a required parameter. 401 - Unauthorized You are not authorized. 402 - Request Failed The parameters were valid but the request failed. 403 - Forbidden Your scope doesn't have permissions to perform the request. 404 - Not Found The requested resource doesn't exist. 500, 502, 503, 504 Something went wrong on our end."
  },
  "topics/swagger.html": {
    "href": "topics/swagger.html",
    "title": "Swagger",
    "keywords": "Swagger You can test functionalities trough our swagger pages, you can find them under these links for the different environments: Acceptance Production"
  }
}